const { Util, MessageEmbed } = require("discord.js");
const ytdl = require("ytdl-core");
const yts = require("yt-search");
const ytdlDiscord = require("ytdl-core-discord");
const YouTube = require("youtube-sr");
const sendError = require("../util/error")
const fs = require('fs');

module.exports = {
  info: {
    name: "search",
    description: "–ò—Å–∫–∞—Ç—å –ø–µ—Å–Ω—é –Ω–∞ YouTube.",
    usage: "<–ù–∞–∑–≤–∞–Ω–∏–µ –ü–µ—Å–Ω–∏>",
    aliases: ["sc"],
  },

  run: async function (client, message, args) {
    let channel = message.member.voice.channel;
    if (!channel)return sendError("–ú–Ω–µ –æ—á–µ–Ω—å –∂–∞–ª—å, –Ω–æ –≤–∞–º –Ω—É–∂–Ω–æ –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å –º—É–∑—ã–∫—É!", message.channel);

    const permissions = channel.permissionsFor(message.client.user);
    if (!permissions.has("CONNECT"))return sendError("–Ø –Ω–µ –º–æ–≥—É –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –≤–∞—à–µ–º—É –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è!", message.channel);
    if (!permissions.has("SPEAK"))return sendError("–Ø –Ω–µ –º–æ–≥—É –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –≤–∞—à–µ–º—É –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è", message.channel);

    var searchString = args.join(" ");
    if (!searchString)return sendError("–í—ã –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏ –ø—Ä–∞–≤–∞, —è —Ö–æ—á—É –∏—Å–∫–∞—Ç—å", message.channel);

    var serverQueue = message.client.queue.get(message.guild.id);
    try {
           var searched = await YouTube.search(searchString, { limit: 10 });
          if (searched[0] == undefined)return sendError("–ü–æ—Ö–æ–∂–µ, —è –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ —ç—Ç—É –ø–µ—Å–Ω—é –Ω–∞ YouTube", message.channel);
                    let index = 0;
                    let embedPlay = new MessageEmbed()
                        .setColor("BLUE")
                        .setAuthor(`–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è \"${args.join(" ")}\"`, message.author.displayAvatarURL())
                        .setDescription(`${searched.map(video2 => `**\`${++index}\`  |** [\`${video2.title}\`](${video2.url}) - \`${video2.durationFormatted}\``).join("\n")}`)
                        .setFooter("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–µ—Å–Ω–∏, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ–µ –≤ —Å–ø–∏—Å–æ–∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è");
                    
                    message.channel.send(embedPlay).then(m => m.delete({
                        timeout: 15000
                    }))
                    try {
                        var response = await message.channel.awaitMessages(message2 => message2.content > 0 && message2.content < 11, {
                            max: 1,
                            time: 20000,
                            errors: ["time"]
                        });
                    } catch (err) {
                        console.error(err);
                        return message.channel.send({
                            embed: {
                                color: "RED",
                                description: "–í —Ç–µ—á–µ–Ω–∏–µ 20 —Å–µ–∫—É–Ω–¥ –Ω–∏—á–µ–≥–æ –Ω–µ –±—ã–ª–æ –≤—ã–±—Ä–∞–Ω–æ, –∑–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω."
                            }
                        });
                    }
                    const videoIndex = parseInt(response.first().content);
                    var video = await (searched[videoIndex - 1])
		    
                } catch (err) {
                    console.error(err);
                    return message.channel.send({
                        embed: {
                            color: "RED",
                            description: "üÜò  **|**  –Ø –Ω–µ —Å–º–æ–≥ –ø–æ–ª—É—á–∏—Ç—å –Ω–∏–∫–∞–∫–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞"
                        }
                    });
                }
            
            response.delete();
  var songInfo = video

    const song = {
      id: songInfo.id,
      title: Util.escapeMarkdown(songInfo.title),
      views: String(songInfo.views).padStart(10, ' '),
      ago: songInfo.uploadedAt,
      duration: songInfo.durationFormatted,
      url: `https://www.youtube.com/watch?v=${songInfo.id}`,
      img: songInfo.thumbnail.url,
      req: message.author
    };

    if (serverQueue) {
      serverQueue.songs.push(song);
      let thing = new MessageEmbed()
      .setAuthor("–ü–µ—Å–Ω—è –±—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å", "https://media.discordapp.net/attachments/749638503683326004/783276139963351040/ebeb0045f7c5948c.png?width=675&height=675")
      .setThumbnail(song.img)
      .setColor("YELLOW")
      .addField("–ù–∞–∑–≤–∞–Ω–∏–µ", song.title, true)
      .addField("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", song.duration, true)
      .addField("–ü–æ –ø—Ä–æ—Å—å–±–µ", song.req.tag, true)
      .setFooter(`–ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${song.views} | ${song.ago}`)
      return message.channel.send(thing);
    }

   const queueConstruct = {
      textChannel: message.channel,
      voiceChannel: channel,
      connection: null,
      songs: [],
      volume: 80,
      playing: true,
      loop: false
    };
    message.client.queue.set(message.guild.id, queueConstruct);
    queueConstruct.songs.push(song);

    const play = async (song) => {
      const queue = message.client.queue.get(message.guild.id);
      let afk = JSON.parse(fs.readFileSync("./afk.json", "utf8"));
       if (!afk[message.guild.id]) afk[message.guild.id] = {
        afk: false,
    };
    var online = afk[message.guild.id]
    if (!song){
      if (!online.afk) {
        sendError("–ü–æ–∫–∏–¥–∞—é –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª, –ø–æ—Ç–æ–º—É —á—Ç–æ –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–µ—Ç –ø–µ—Å–µ–Ω. –ï—Å–ª–∏ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –±–æ—Ç –æ—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å 24/7 –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, –∫–æ–º–∞–Ω–¥–∞ `!afk`)", message.channel)
        message.guild.me.voice.channel.leave();
        message.client.queue.delete(message.guild.id);
      }
            return message.client.queue.delete(message.guild.id);
}
let stream = null;  
    if (song.url.includes("youtube.com")) {
      stream = await ytdl(song.url);
      stream.on('error', err => {
        if (queue) {
        queue.songs.shift();
        play(queue.songs[0]);
      }
      
  	 sendError(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.\n –í–æ–∑–º–æ–∂–Ω—ã–π —Ç–∏–ø \`${err}\``, message.channel)
     return;
});
    }
    queue.connection.on("disconnect", () => message.client.queue.delete(message.guild.id));
      const dispatcher = queue.connection
         .play(ytdl(song.url, {quality: 'highestaudio', highWaterMark: 1 << 25 ,type: "opus"}))
      .on("finish", () => {
           const shiffed = queue.songs.shift();
            if (queue.loop === true) {
                queue.songs.push(shiffed);
            };
          play(queue.songs[0]);
        })

      dispatcher.setVolumeLogarithmic(queue.volume / 100);
      let thing = new MessageEmbed()
      .setAuthor("–ù–∞—á–∏–Ω–∞—é –∏–≥—Ä–∞—Ç—å –º—É–∑—ã–∫—É!", "https://media.discordapp.net/attachments/749638503683326004/783276139963351040/ebeb0045f7c5948c.png?width=675&height=675")
      .setThumbnail(song.img)
      .setColor("BLUE")
      .addField("–ù–∞–∑–≤–∞–Ω–∏–µ", song.title, true)
      .addField("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", song.duration, true)
      .addField("–ü–æ –ø—Ä–æ—Å—å–±–µ", song.req.tag, true)
      .setFooter(`–ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${song.views} | ${song.ago}`)
      queue.textChannel.send(thing);
    };

    try {
      const connection = await channel.join();
      queueConstruct.connection = connection;
      channel.guild.voice.setSelfDeaf(true)
      play(queueConstruct.songs[0]);
    } catch (error) {
      console.error(`–Ø –Ω–µ –º–æ–≥ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É: ${error}`);
      message.client.queue.delete(message.guild.id);
      await channel.leave();
      return sendError(`–Ø –Ω–µ –º–æ–≥ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É: ${error}`, message.channel);
    }
 
  },

};
